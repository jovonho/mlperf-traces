#!/usr/local/bin/bpftrace

#include <linux/fs.h>
#include <linux/mm.h>

BEGIN
{
	printf("mmap():\n");
	printf("%-15s %-10s %-6s %-6s %-10s %-12s", "TIMESTAMP", "TIME", "PID", "TID", "FUNCTION", "ADDRESS");
	printf("%-8s %-4s %-4s %-8s %s\n", "LEN", "PROT", "FLAGS", "LAT(ns)", "FILENAME");

	printf("munmap():\n");
	printf("%-15s %-10s %-6s %-6s %-10s %-12s", "TIMESTAMP", "TIME", "PID", "TID", "FUNCTION", "ADDRESS");
	printf("%-8s %-8s\n", "LEN", "LAT(ns)");
}


// ************************************************************
// 	MMAP
// ************************************************************

//unsigned long do_mmap(struct file *file, unsigned long addr,
//			unsigned long len, unsigned long prot,
//			unsigned long flags, unsigned long pgoff,
//			unsigned long *populate, struct list_head *uf)

kprobe:do_mmap
/ comm == "python" /
{
	$file = (struct file *)arg0;
	@mm_filename[tid] = $file->f_path.dentry->d_name.name; 
	@mm_len[tid] = arg2;
	@mm_prot[tid] = arg3;
	@mm_flag[tid] = arg4;
}
kretprobe:do_mmap
/ @mm_filename[tid] /
{
	$now = nsecs;
	$latency = $now - @rmd_start[tid];

	$addr = retval;

	printf("%lu ", $now);
	time("%H:%M:%S  ");
	printf("%-6d %-6d", pid, tid);

	printf("%-10s 0x%-12x %-8d 0x%-4x 0x%-4x ", 
		"mmap()", 
		$addr, 		
		@mm_len[tid], 
		@mm_prot[tid], 
		@mm_flag[tid]);

	printf("%-8d %s\n", 
		$latency, 
		str(@mm_filename[tid]));	


	delete(@mm_filename[tid]);
	delete(@mm_len[tid]);
	delete(@mm_prot[tid]);
	delete(@mm_flag[tid]);
}

// tracepoint:syscalls:sys_enter_munmap
//     int __syscall_nr;
//     unsigned long addr;
//     size_t len;
tracepoint:syscalls:sys_enter_munmap
/ comm == "python" /
{
	@mun_start[tid] = nsecs;
	@mun_addr[tid] = args->addr;
	@mun_len[tid] = args->len;
}
tracepoint:syscalls:sys_exit_munmap
/ @mun_start[tid] /
{
	$now = nsecs;
	$latency = $now - @mun_start[tid];

	printf("%lu ", $now);
	time("%H:%M:%S  ");
	printf("%-6d %-6d", pid, tid);

	printf("%-10s 0x%lx %-8d %-8d\n", 
		"munmap()", 
		@mun_addr[tid], 
		@mun_len[tid], 
		$latency);
	
	delete(@mun_start[tid]);
	delete(@mun_addr[tid]);
	delete(@mun_len[tid]);
}


// ************************************************************
// 	CLEANUP
// ************************************************************
END 
{
	clear(@mm_filename);
	clear(@mm_len);
	clear(@mm_prot);
	clear(@mm_flag);

	clear(@mun_start);
	clear(@mun_addr);
	clear(@mun_len);
}
